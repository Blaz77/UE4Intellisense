namespace UE4Intellisense
{
    // UnrealEngine\Engine\Source\Runtime\CoreUObject\Public\UObject\ObjectBase.h
    // s|^/// (.*)\n///|/// $1|
    // s|^///* (.*)\n(.*)\,|new UE4Specifier { Name = "$2", Desc = "$1" },|
    internal static class UE4SpecifiersSource
    {
        public static UE4Specifier[] UI = new UE4Specifier[]
        {
            new UE4Specifier { Name = "DependsOn", Desc = "This keyword specifies that this class cannot have its code generated until the given class has been processed." },
            new UE4Specifier { Name = "MinimalAPI", Desc = "This keyword indicates that the interface should be accessible outside of it's module, but does not need all methods exported. It exports only the autogenerated methods required for dynamic_cast<>, etc... to work." },
            new UE4Specifier { Name = "Blueprintable", Desc = "Exposes this interface as an acceptable base class for creating blueprints.  The default is NotBlueprintable, unless inherited otherwise. This is inherited by subclasses." },
            new UE4Specifier { Name = "NotBlueprintable", Desc = "Specifies that this interface is *NOT* an acceptable base class for creating blueprints.  The default is NotBlueprintable, unless inherited otherwise. This is inherited by subclasses." },
            new UE4Specifier { Name = "ConversionRoot", Desc = "Sets IsConversionRoot metadata flag for this interface." },
        };

        public static UE4Specifier[] UC = new UE4Specifier[]
        {
            new UE4Specifier { Name = "classGroup", Desc = "This keyword is used to set the actor group that the class is show in, in the editor." },
            new UE4Specifier { Name = "DependsOn", Desc = "This keyword specifies that this class cannot have its code generated until the given class has been processed." },
            new UE4Specifier { Name = "Within", Desc = "Declares that instances of this class should always have an outer of the specified class.  This is inherited by subclasses unless overridden." }, /* =OuterClassName */
            new UE4Specifier { Name = "BlueprintType", Desc = "Exposes this class as a type that can be used for variables in blueprints" },
            new UE4Specifier { Name = "NotBlueprintType", Desc = "Prevents this class from being used for variables in blueprints" },
            new UE4Specifier { Name = "Blueprintable", Desc = "Exposes this class as an acceptable base class for creating blueprints. The default is NotBlueprintable, unless inherited otherwise. This is inherited by subclasses." },
            new UE4Specifier { Name = "NotBlueprintable", Desc = "Specifies that this class is *NOT* an acceptable base class for creating blueprints. The default is NotBlueprintable, unless inherited otherwise. This is inherited by subclasses." },
            new UE4Specifier { Name = "MinimalAPI", Desc = "This keyword indicates that the class should be accessible outside of it's module, but does not need all methods exported. It exports only the autogenerated methods required for dynamic_cast<>, etc... to work." },
            new UE4Specifier { Name = "customConstructor", Desc = "Prevents automatic generation of the constructor declaration." },
            new UE4Specifier { Name = "Intrinsic", Desc = "Class was declared directly in C++ and has no boilerplate generated by UnrealHeaderTool. DO NOT USE THIS FLAG ON NEW CLASSES." },
            new UE4Specifier { Name = "noexport", Desc = "No autogenerated code will be created for this class; the header is only provided to parse metadata from. DO NOT USE THIS FLAG ON NEW CLASSES." },
            new UE4Specifier { Name = "placeable", Desc = "Allow users to create and place this class in the editor.  This flag is inherited by subclasses." },
            new UE4Specifier { Name = "notplaceable", Desc = "This class cannot be placed in the editor (it cancels out an inherited placeable flag)." },
            new UE4Specifier { Name = "DefaultToInstanced", Desc = "All instances of this class are considered 'instanced'. Instanced classes (components) are duplicated upon construction. This flag is inherited by subclasses. " },
            new UE4Specifier { Name = "Const", Desc = "All properties and functions in this class are const and should be exported as const.  This flag is inherited by subclasses." },
            new UE4Specifier { Name = "Abstract", Desc = "Class is abstract and can't be instantiated directly." },
            new UE4Specifier { Name = "deprecated", Desc = "This class is deprecated and objects of this class won't be saved when serializing.  This flag is inherited by subclasses." },
            new UE4Specifier { Name = "Transient", Desc = "This class can't be saved; null it out at save time.  This flag is inherited by subclasses." },
            new UE4Specifier { Name = "nonTransient", Desc = "This class should be saved normally (it cancels out an inherited transient flag)." },
            new UE4Specifier { Name = "config", Desc = "Load object configuration at construction time.  These flags are inherited by subclasses. Class containing config properties. Usage config=ConfigName or config=inherit (inherits config name from base class)." },
            new UE4Specifier { Name = "perObjectConfig", Desc = "Handle object configuration on a per-object basis, rather than per-class. " },
            new UE4Specifier { Name = "configdonotcheckdefaults", Desc = "Determine whether on serialize to configs a check should be done on the base/defaults ini's" },
            new UE4Specifier { Name = "defaultconfig", Desc = "Save object config only to Default INIs, never to local INIs." },
            new UE4Specifier { Name = "editinlinenew", Desc = "These affect the behavior of the property editor. Class can be constructed from editinline New button." },
            new UE4Specifier { Name = "noteditinlinenew", Desc = "Class can't be constructed from editinline New button." },
            new UE4Specifier { Name = "hidedropdown", Desc = "Class not shown in editor drop down for class selection." },
            new UE4Specifier { Name = "showCategories", Desc = "Shows the specified categories in a property viewer. Usage: showCategories=CategoryName or showCategories=(category0, category1, ...)" },
            new UE4Specifier { Name = "hideCategories", Desc = "Hides the specified categories in a property viewer. Usage: hideCategories=CategoryName or hideCategories=(category0, category1, ...)" },
            new UE4Specifier { Name = "ComponentWrapperClass", Desc = "Indicates that this class is a wrapper class for a component with little intrinsic functionality (this causes things like hideCategories and showCategories to be ignored if the class is subclassed in a Blueprint)" },
            new UE4Specifier { Name = "showFunctions", Desc = "Shows the specified function in a property viewer. Usage: showFunctions=FunctionName or showFunctions=(category0, category1, ...)" },
            new UE4Specifier { Name = "hideFunctions", Desc = "Hides the specified function in a property viewer. Usage: hideFunctions=FunctionName or hideFunctions=(category0, category1, ...)" },
            new UE4Specifier { Name = "autoExpandCategories", Desc = "Specifies which categories should be automatically expanded in a property viewer." },
            new UE4Specifier { Name = "autoCollapseCategories", Desc = "Specifies which categories should be automatically collapsed in a property viewer." },
            new UE4Specifier { Name = "dontAutoCollapseCategories", Desc = "Clears the list of auto collapse categories." },
            new UE4Specifier { Name = "collapseCategories", Desc = "Display properties in the editor without using categories." },
            new UE4Specifier { Name = "dontCollapseCategories", Desc = "Display properties in the editor using categories (default behaviour)." },
            new UE4Specifier { Name = "AdvancedClassDisplay", Desc = "All the properties of the class are hidden in the main display by default, and are only shown in the advanced details section." },
            new UE4Specifier { Name = "ConversionRoot", Desc = "A root convert limits a sub-class to only be able to convert to child classes of the first root class going up the hierarchy." },
            new UE4Specifier { Name = "Experimental", Desc = "Marks this class as 'experimental' (a totally unsupported and undocumented prototype)" },
            new UE4Specifier { Name = "EarlyAccessPreview", Desc = "Marks this class as an 'early access' preview (while not considered production-ready, it's a step beyond 'experimental' and is being provided as a preview of things to come)" },
        };

        public static UE4Specifier[] UF = new UE4Specifier[]
        {
            new UE4Specifier { Name = "BlueprintImplementableEvent", Desc = "This function is designed to be overridden by a blueprint.  Do not provide a body for this function; the autogenerated code will include a thunk that calls ProcessEvent to execute the overridden body." },
            new UE4Specifier { Name = "BlueprintNativeEvent", Desc = "This function is designed to be overridden by a blueprint, but also has a native implementation. Provide a body named [FunctionName]_Implementation instead of [FunctionName]; the autogenerated code will include a thunk that calls the implementation method when necessary." },
            new UE4Specifier { Name = "SealedEvent", Desc = "This function is sealed and cannot be overridden in subclasses. It is only a valid keyword for events; declare other methods as static or final to indicate that they are sealed." },
            new UE4Specifier { Name = "Exec", Desc = "This function is executable from the command line." },
            new UE4Specifier { Name = "Server", Desc = "This function is replicated, and executed on servers.  Provide a body named [FunctionName]_Implementation instead of [FunctionName]; the autogenerated code will include a thunk that calls the implementation method when necessary." },
            new UE4Specifier { Name = "Client", Desc = "This function is replicated, and executed on clients.  Provide a body named [FunctionName]_Implementation instead of [FunctionName]; the autogenerated code will include a thunk that calls the implementation method when necessary." },
            new UE4Specifier { Name = "NetMulticast", Desc = "This function is both executed locally on the server and replicated to all clients, regardless of the Actor's NetOwner" },
            new UE4Specifier { Name = "Reliable", Desc = "Replication of calls to this function should be done on a reliable channel. Only valid when used in conjunction with Client or Server" },
            new UE4Specifier { Name = "Unreliable", Desc = "Replication of calls to this function can be done on an unreliable channel. Only valid when used in conjunction with Client or Server" },
            new UE4Specifier { Name = "BlueprintPure", Desc = "This function fulfills a contract of producing no side effects, and additionally implies BlueprintCallable." },
            new UE4Specifier { Name = "BlueprintCallable", Desc = "This function can be called from blueprint code and should be exposed to the user of blueprint editing tools." },
            new UE4Specifier { Name = "BlueprintAuthorityOnly", Desc = "This function will not execute from blueprint code if running on something without network authority" },
            new UE4Specifier { Name = "BlueprintCosmetic", Desc = "This function is cosmetic and will not run on dedicated servers" },
            new UE4Specifier { Name = "CustomThunk", Desc = "The UnrealHeaderTool code generator will not produce a execFoo thunk for this function; it is up to the user to provide one." },
            new UE4Specifier { Name = "Category", Desc = "Specifies the category of the function when displayed in blueprint editing tools. Usage: Category=CategoryName or Category='MajorCategory,SubCategory'" },
            new UE4Specifier { Name = "WithValidation", Desc = "This function must supply a _Validate implementation" },
            new UE4Specifier { Name = "ServiceRequest", Desc = "This function is RPC service request" },
            new UE4Specifier { Name = "ServiceResponse", Desc = "This function is RPC service response" },
        };

        public static UE4Specifier[] UP = new UE4Specifier[]
        {
            new UE4Specifier { Name = "Const", Desc = "This property is const and should be exported as const." },
            new UE4Specifier { Name = "Config", Desc = "Property should be loaded/saved to ini file as permanent profile." },
            new UE4Specifier { Name = "GlobalConfig", Desc = "Same as above but load config from base class, not subclass." },
            new UE4Specifier { Name = "Localized", Desc = "Property should be loaded as localizable text. Implies ReadOnly." },
            new UE4Specifier { Name = "Transient", Desc = "Property is transient: shouldn't be saved, zero-filled at load time." },
            new UE4Specifier { Name = "DuplicateTransient", Desc = "Property should always be reset to the default value during any type of duplication (copy/paste, binary duplication, etc.)" },
            new UE4Specifier { Name = "NonPIETransient", Desc = "Property should always be reset to the default value unless it's being duplicated for a PIE session - deprecated, use NonPIEDuplicateTransient instead" },
            new UE4Specifier { Name = "NonPIEDuplicateTransient", Desc = "Property should always be reset to the default value unless it's being duplicated for a PIE session" },
            new UE4Specifier { Name = "Ref", Desc = "Value is copied out after function call. Only valid on function param declaration." },
            new UE4Specifier { Name = "Export", Desc = "Object property can be exported with it's owner." },
            new UE4Specifier { Name = "NoClear", Desc = "Hide clear (and browse) button in the editor." },
            new UE4Specifier { Name = "EditFixedSize", Desc = "Indicates that elements of an array can be modified, but its size cannot be changed." },
            new UE4Specifier { Name = "Replicated", Desc = "Property is relevant to network replication." },
            new UE4Specifier { Name = "ReplicatedUsing", Desc = "Property is relevant to network replication. Notify actors when a property is replicated (usage: ReplicatedUsing=FunctionName)." },
            new UE4Specifier { Name = "NotReplicated", Desc = "Skip replication (only for struct members and parameters in service request functions)." },
            new UE4Specifier { Name = "Interp", Desc = "Interpolatable property for use with matinee. Always user-settable in the editor." },
            new UE4Specifier { Name = "NonTransactional", Desc = "Property isn't transacted." },
            new UE4Specifier { Name = "Instanced", Desc = "Property is a component reference. Implies EditInline and Export." },
            new UE4Specifier { Name = "BlueprintAssignable", Desc = "MC Delegates only.  Property should be exposed for assigning in blueprints." },
            new UE4Specifier { Name = "Category", Desc = "Specifies the category of the property. Usage: Category=CategoryName." },
            new UE4Specifier { Name = "SimpleDisplay", Desc = "Properties appear visible by default in a details panel" },
            new UE4Specifier { Name = "AdvancedDisplay", Desc = "Properties are in the advanced dropdown in a details panel" },
            new UE4Specifier { Name = "EditAnywhere", Desc = "Indicates that this property can be edited by property windows in the editor" },
            new UE4Specifier { Name = "EditInstanceOnly", Desc = "Indicates that this property can be edited by property windows, but only on instances, not on archetypes" },
            new UE4Specifier { Name = "EditDefaultsOnly", Desc = "Indicates that this property can be edited by property windows, but only on archetypes" },
            new UE4Specifier { Name = "VisibleAnywhere", Desc = "Indicates that this property is visible in property windows, but cannot be edited at all" },
            new UE4Specifier { Name = "VisibleInstanceOnly", Desc = "Indicates that this property is only visible in property windows for instances, not for archetypes, and cannot be edited" },
            new UE4Specifier { Name = "VisibleDefaultsOnly", Desc = "Indicates that this property is only visible in property windows for archetypes, and cannot be edited" },
            new UE4Specifier { Name = "BlueprintReadOnly", Desc = "This property can be read by blueprints, but not modified." },
            new UE4Specifier { Name = "BlueprintReadWrite", Desc = "This property can be read or written from a blueprint." },
            new UE4Specifier { Name = "AssetRegistrySearchable", Desc = "The AssetRegistrySearchable keyword indicates that this property and it's value will be automatically added to the asset registry for any asset class instances containing this as a member variable.  It is not legal to use on struct properties or parameters." },
            new UE4Specifier { Name = "SaveGame", Desc = "Property should be serialized for save game." },
            new UE4Specifier { Name = "BlueprintCallable", Desc = "MC Delegates only.  Property should be exposed for calling in blueprint code" },
            new UE4Specifier { Name = "BlueprintAuthorityOnly", Desc = "MC Delegates only. This delegate accepts (only in blueprint) only events with BlueprintAuthorityOnly." },
            new UE4Specifier { Name = "TextExportTransient", Desc = "Property shouldn't be exported to text format (e.g. copy/paste)" },
        };

        public static UE4Specifier[] US = new UE4Specifier[]
        {
            new UE4Specifier { Name = "NoExport", Desc = "No autogenerated code will be created for this class; the header is only provided to parse metadata from." },
            new UE4Specifier { Name = "Atomic", Desc = "Indicates that this struct should always be serialized as a single unit" },
            new UE4Specifier { Name = "Immutable", Desc = "Immutable is only legal in Object.h and is being phased out, do not use on new structs!" },
            new UE4Specifier { Name = "BlueprintType", Desc = "Exposes this struct as a type that can be used for variables in blueprints" },
        };
    }
}
